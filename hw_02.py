# Урок 2. Встроенные типы и операции с ними

# # **********************************
# # 1. Создать список и заполнить его элементами различных типов данных.
# # Реализовать скрипт проверки типа данных каждого элемента.
# # Использовать функцию type() для проверки типа.
# # Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
# a = 13
# spisok = ['практика', '567', '...', 567, 1.1, a, [a+1, a/2]]
# m = len(spisok)
# k = 0
# while k < m:
#     print(spisok[k], '-', type(spisok[k]))
#     k +=1

# **********************************
# 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().
# text = input('Введите от 2-х значений через пробел: ')
# spisok = text.split()
# m = len(spisok)
# k = 0
# if m > 1:
#     print('Введено ', spisok)
#     while m - k > 1:
#             perem = spisok[k]
#             spisok[k] = spisok[k+1]
#             spisok[k+1] = perem
#             k += 2
#     print('Заменено', spisok)
# else:
#     print ('Введно меньше 2х знаечний, начните заново')

# # или проще
# text = input('Введите от 2-х значений через пробел: ')
# spisok = text.split()
# m = len(spisok)
# k = 0
# print('Введено ', spisok)
# while m - k > 1:
#         spisok[k], spisok[k+1] = spisok[k+1], spisok[k]
#         k += 2
# print('Заменено', spisok)


# # **********************************
# # 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# # Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# # Напишите решения через list и dict.

# # решение через список
# a = int(input(("Введите месяц в виде целого числа от 1 до 12: ")))
# season=['зима', 'весна', 'лето', 'осень']
# if a < 1 or a > 12:
#     print('Введите заново')
# elif a >= 3 and a <= 5:
#     print('это', season[1])
# elif a >= 6 and a <= 8:
#     print('это', season[2])
# elif a >= 9 and a <= 11:
#     print('это', season[3])
# else:
#     print('это', season[0])

# # решение через словарь
# a = int(input(("Введите месяц в виде целого числа от 1 до 12: ")))
# if a < 1 or a > 12:
#     print('Введите заново')
# season2 = {'весна': [3, 4, 5], 'лето': [6, 7, 8], 'осень': [9, 10, 11], 'зима': [1, 2, 12]}
# for element in season2:
#     if a in season2[element]:
#         print (f'Это {element}')

# # **********************************
# # 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# # Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# # Если слово длинное, выводить только первые 10 букв в слове.
# spisok = input("Введите нескольок слов: ").split(' ')
# for i, el in enumerate(spisok, 1):
#     print (f'{i}. {el[:10]}')


# **********************************
# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
# Решение: если число пользователя n меньше элемента под индексом i-1, то добавить знаечние n на место индекса i.
# искать перебором от наибольшего индекса i-1 до наименьшего, но до 0.
rate = [8, 5, 3, 2, 2]
n = int(input('Введите новый элемент рейтинга: '))
i = len(rate)
while n > rate[i-1] and i > 0:
    i -= 1
print('Было: ', rate)
rate.insert(i, n)
print('Стало:', rate)

# **********************************
# 6. (Дополнительно) Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента
# — номер товара и словарь с параметрами, то есть характеристиками товара:
# название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
#
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
#
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название. Тогда значение — список значений-характеристик, например, список названий товаров.
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }